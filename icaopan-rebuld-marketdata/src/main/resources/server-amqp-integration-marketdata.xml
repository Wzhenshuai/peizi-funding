<?xml version="1.0" encoding="GBK"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:int="http://www.springframework.org/schema/integration"
	   xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	   xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/rabbit
		http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/amqp
		http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		">
    <context:property-placeholder/>
	<rabbit:connection-factory id="mdConnectionFactory" host="${md.rabbitmq.host:md.rabbitmq.host}" username="lever2Manage" password="BigwinManage"/>
	<rabbit:template id="mdAmqpTemplate" connection-factory="mdConnectionFactory"  reply-timeout="15000"/>
	<rabbit:admin id="mdMqAdmin" connection-factory="mdConnectionFactory"/>
	
	<rabbit:queue id="mdSnapshotQueue" auto-delete="true" durable="false" declared-by="mdMqAdmin" >
		<rabbit:queue-arguments >
	        <entry key="x-max-length">
	        	<value type="java.lang.Long">1</value>
	        </entry>
	    </rabbit:queue-arguments>
	</rabbit:queue>
	
	<rabbit:fanout-exchange name="marketdata.snapshots.exchange" declared-by="mdMqAdmin">
		<rabbit:bindings>
			<rabbit:binding  queue="mdSnapshotQueue"/>
		</rabbit:bindings>
	</rabbit:fanout-exchange>
	
	<bean id="mdSnapshotsMessageListener" class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
	    <constructor-arg ref="mdConnectionFactory" />
	    <property name="queues" ref="mdSnapshotQueue" />
	    <property name="defaultRequeueRejected" value="false" />
	</bean>
	
	<int-amqp:inbound-channel-adapter  listener-container="mdSnapshotsMessageListener" channel="marketdataSnapshotsChannel" />
		 
	<int:channel  id="marketdataSnapshotsChannel"/>

	<int:service-activator  input-channel="marketdataSnapshotsChannel" ref="marketDataManager" method="update"/>
	
	<!-- json方式更新行情  -->
	<!-- spring template声明-->
     <rabbit:template exchange="marketdata.snapshots.exchange2" id="amqpTemplate2"  connection-factory="mdConnectionFactory"  message-converter="jsonMessageConverter" />

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />  
	
	<rabbit:queue id="mdSnapshotQueue2" auto-delete="true" durable="false" declared-by="mdMqAdmin" >
		<rabbit:queue-arguments >
	        <entry key="x-max-length">
	        	<value type="java.lang.Long">1</value>
	        </entry>
	    </rabbit:queue-arguments>
	</rabbit:queue>

	<rabbit:fanout-exchange name="marketdata.snapshots.exchange2" declared-by="mdMqAdmin">
		<rabbit:bindings>
			<rabbit:binding  queue="mdSnapshotQueue2"/>
		</rabbit:bindings>
	</rabbit:fanout-exchange>
	
	<!--<bean id="mdSnapshotsMessageListener2" class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">-->
	    <!--<constructor-arg ref="mdConnectionFactory" />-->
	    <!--<property name="queues" ref="mdSnapshotQueue2" />-->
	    <!--<property name="defaultRequeueRejected" value="false" />-->
	<!--</bean>-->
	<!---->
	<!--<int-amqp:inbound-channel-adapter  listener-container="mdSnapshotsMessageListener2" channel="marketdataSnapshotsChannel2" />-->
		 <!---->
	<!--<int:channel  id="marketdataSnapshotsChannel2"/>-->

	<!--<int:service-activator  input-channel="marketdataSnapshotsChannel2" ref="marketDataManager" method="updateByPrice"/>-->

	<rabbit:listener-container connection-factory="mdConnectionFactory" acknowledge="auto">
		<rabbit:listener queues="mdSnapshotQueue2" ref="marketDataUpdateListener"/>
	</rabbit:listener-container>
		
</beans>
